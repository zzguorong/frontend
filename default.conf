# HTTP 强制跳转 HTTPS
server {
    listen 80;
    server_name gaiass.com www.gaiass.com api.gaiass.com;
    return 301 https://$host$request_uri;
}

# 重定向服务器块：将 https://gaiass.com 重定向到 https://www.gaiass.com
server {
    listen 443 ssl;
    server_name gaiass.com;

    ssl_certificate     /etc/nginx/ssl/gaiass.com/gaiass.com.pem;
    ssl_certificate_key /etc/nginx/ssl/gaiass.com/gaiass.com.key;

    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # 强制重定向到 www 版本
    return 301 https://www.gaiass.com$request_uri;
}


#主站 HTTPS 配置
server {
    listen 443 ssl;
    server_name www.gaiass.com;
    client_max_body_size 20m;

    # Security Headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Download-Options noopen always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' https://cdnjs.cloudflare.com https://res.wx.qq.com https://open.weixin.qq.com https://speedcf.cloudflareaccess.com 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' https://api.gaiass.com data: blob:; font-src 'self'; connect-src 'self' api.gaiass.com data: blob:; frame-src 'self' https://open.weixin.qq.com" always;

    ssl_certificate     /etc/nginx/ssl/gaiass.com/gaiass.com.pem;
    ssl_certificate_key /etc/nginx/ssl/gaiass.com/gaiass.com.key;

    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    root /var/www/html;
    index index.html;

    # 静态资源和前端页面
    location / {
        try_files $uri $uri/ /index.html;
    }


    location = /favicon.ico {
        alias /var/www/html/favicon.ico;
        log_not_found off;
        access_log off;
    }
    # 转发主站上的 /api/ 请求到后端
    location /api/  {
        proxy_pass http://xxxxxxx:80/api/;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;


        if ($request_method = OPTIONS) {
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

}

# 子域名 api.gaiass.com 的 HTTPS 配置
server {
    listen 443 ssl;
    server_name api.gaiass.com;
    client_max_body_size 100m;

    ssl_certificate     /etc/nginx/ssl/api.gaiass.com/api.gaiass.com_bundle.pem;
    ssl_certificate_key /etc/nginx/ssl/api.gaiass.com/api.gaiass.com.key;

    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # Get Images
    location /storage/ {
        add_header 'Access-Control-Allow-Origin' $cors_header;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Accept-Encoding, Cache-Control, Connection, Host, Pragma, Referer, User-Agent, Origin, Content-Type, Accept, Authorization';
        if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' $cors_header;
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'Accept-Encoding, Cache-Control, Connection, Host, Pragma, Referer, User-Agent, Origin, Content-Type, Accept, Authorization';
          add_header 'Content-Length' 0;
          add_header 'Content-Type' 'text/plain; charset=UTF-8';
          return 204;
        }
        proxy_pass http://xxxxxxx:80/storage/;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 保留 /api 前缀
    location / {
	      proxy_pass http://xxxxxxx:80/;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

    }
}
